version: '3.8'

services:
  # InfluxDB for time-series data storage
  influxdb:
    image: influxdb:1.8
    container_name: ruuvi-influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=ruuvi_sensors
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=secure_password
      - INFLUXDB_USER=ruuvi_user
      - INFLUXDB_USER_PASSWORD=ruuvi_password
    volumes:
      - influxdb_data:/var/lib/influxdb
      - ./influxdb.conf:/etc/influxdb/influxdb.conf:ro
    networks:
      - ruuvi-network

  # Grafana for data visualization
  grafana:
    image: grafana/grafana:latest
    container_name: ruuvi-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - ruuvi-network
    depends_on:
      - influxdb

  # Ruuvi Sensor Service
  ruuvi-sensor:
    build:
      context: ..
      dockerfile: examples/Dockerfile
    container_name: ruuvi-sensor-service
    restart: unless-stopped
    privileged: true  # Required for Bluetooth access
    network_mode: host  # Required for Bluetooth Low Energy
    environment:
      - INFLUXDB_HOST=localhost
      - INFLUXDB_PORT=8086
      - INFLUXDB_DATABASE=ruuvi_sensors
      - INFLUXDB_USERNAME=ruuvi_user
      - INFLUXDB_PASSWORD=ruuvi_password
      - BLE_SCAN_INTERVAL=10
      - BLE_SCAN_TIMEOUT=5
      - LOG_LEVEL=INFO
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
      - /var/run/dbus:/var/run/dbus:ro  # Required for Bluetooth
    devices:
      - /dev/bus/usb:/dev/bus/usb  # USB Bluetooth adapter access
    depends_on:
      - influxdb
    healthcheck:
      test: ["CMD", "python", "main.py", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: ruuvi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - ruuvi-network
    depends_on:
      - grafana

volumes:
  influxdb_data:
    driver: local
  grafana_data:
    driver: local

networks:
  ruuvi-network:
    driver: bridge